/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import AccesoDatos.ConexionBase;
import Clases.VentaHasProductosObj;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author User1
 */
public class MenuFrutAdmin extends javax.swing.JFrame {

    /**
     * Creates new form MenuBasico
     */
    public MenuFrutAdmin() {
        
        initComponents(); 
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnUsuarios = new javax.swing.JButton();
        btnRecetas = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnReabastecer = new javax.swing.JButton();
        btnInventario = new javax.swing.JButton();
        btnMerma = new javax.swing.JButton();
        btnAlta = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnTipoProd = new javax.swing.JButton();
        btnUnidMed = new javax.swing.JButton();
        btnCorteCaja = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setText("Menu");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));

        btnUsuarios.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnUsuarios.setText("Usuarios");
        btnUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuariosActionPerformed(evt);
            }
        });
        getContentPane().add(btnUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 190, 30));

        btnRecetas.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnRecetas.setText("Venta");
        btnRecetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecetasActionPerformed(evt);
            }
        });
        getContentPane().add(btnRecetas, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 250, 60));

        btnSalir.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 140, 50));

        btnReabastecer.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnReabastecer.setText("Reabastecimiento de producto");
        btnReabastecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReabastecerActionPerformed(evt);
            }
        });
        getContentPane().add(btnReabastecer, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 510, 350, 60));

        btnInventario.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnInventario.setText("Inventario");
        btnInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventarioActionPerformed(evt);
            }
        });
        getContentPane().add(btnInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 250, 60));

        btnMerma.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnMerma.setText("Merma");
        btnMerma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMermaActionPerformed(evt);
            }
        });
        getContentPane().add(btnMerma, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 250, 60));

        btnAlta.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnAlta.setText("Alta de productos");
        btnAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 250, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, 210, 220));

        btnTipoProd.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnTipoProd.setText("Tipo de Producto");
        btnTipoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoProdActionPerformed(evt);
            }
        });
        getContentPane().add(btnTipoProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 240, 30));

        btnUnidMed.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnUnidMed.setText("Unidades de medida");
        btnUnidMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnidMedActionPerformed(evt);
            }
        });
        getContentPane().add(btnUnidMed, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 240, 30));

        btnCorteCaja.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        btnCorteCaja.setText("Ventas del dia");
        btnCorteCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorteCajaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCorteCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, 250, 60));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1920x1080-Fondo-de-pantalla-verde-simple.jpg"))); // NOI18N
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuariosActionPerformed
        // TODO add your handling code here:
        
        UsuariosFrutt  usuarios = new UsuariosFrutt();
        usuarios.setVisible(true);
        this.setVisible(false);
        
        
    }//GEN-LAST:event_btnUsuariosActionPerformed

    private void btnRecetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecetasActionPerformed
        // TODO add your handling code here:
        
        VentaGraf  ventasFru = new VentaGraf();
        ventasFru.setVisible(true);

        
        this.setVisible(false);
        
        
    }//GEN-LAST:event_btnRecetasActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnReabastecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReabastecerActionPerformed
        // TODO add your handling code here:
        
        ReabastecerFrut reabasF = new ReabastecerFrut();
        reabasF.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_btnReabastecerActionPerformed

    private void btnInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventarioActionPerformed
        // TODO add your handling code here:
        String Empleado ="";
        
        try{
             Connection conn = ConexionBase.getConnection();
                    String sqlS = "SELECT NombreEmpleado from Usuarios u, UsuarioUso s where s.id_Usuario = u.id_Usuario";                 
        
                    Statement st = null;
                    ResultSet rs = null;
                    
                    st = conn.createStatement();
                    rs = st.executeQuery(sqlS);
                    if(rs.next())
                    Empleado = rs.getString(1);
        
        }catch (SQLException e) {           
            JOptionPane.showMessageDialog(null, "NO se pudo encontar al piloto" + e.getMessage());
                        
        }
        
        
        
        
        try{
            
                    FileOutputStream archivoPdfN;            
                    File file = new File("src/pdfss/inventario.pdf");           
                    archivoPdfN = new FileOutputStream(file);
            
            
                    Document doc = new Document();
                    PdfWriter.getInstance(doc,archivoPdfN);
            
            
                    doc.open();
                    
                    Font negrita = new Font(Font.FontFamily.TIMES_ROMAN,12,Font.BOLD,BaseColor.BLACK);
                    Image logo = Image.getInstance("src/Imagenes/logo.png");
            
                    
                    Paragraph fecha = new Paragraph();
                    
                    fecha.add(Chunk.NEWLINE);
            
                    java.util.Date date= new java.util.Date();
                    fecha.add("Empleado: " +Empleado+"\nFecha: "+ new SimpleDateFormat("dd-MM-yyyy").format(date)+"\n\n");
            
                    //Encabezado
                    PdfPTable encabezado = new PdfPTable(4);            
                    encabezado.setWidthPercentage(100);
                    encabezado.getDefaultCell().setBorder(0);
            
                    float[] columnaEncabezado = new float[]{20f,30f,70f,40f};
            
                    encabezado.setWidths(columnaEncabezado);
                    encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);                 
            
                    encabezado.addCell(logo);
            
                    String nom = "FRUTERIA POLO";
                    String tel = "844-298-2625";
                    String dir = "SALTILLO-COAHUILA";
            
                    encabezado.addCell("");
                    encabezado.addCell(nom + "\nInventario de productos\nTelefono: "+tel + "\nDireccion: "+dir);
                    encabezado.addCell(fecha);
            
                    doc.add(encabezado);
                    
                    //Termina encabezado
                    
                    //Empiezan Productos
                    
                    PdfPTable productos = new PdfPTable(3);            
                    encabezado.setWidthPercentage(100);
                    encabezado.getDefaultCell().setBorder(0);
                    
                    float[] columnaProductos = new float[]{20f,30f,70f,};
            
                    encabezado.setWidths(columnaEncabezado);
                    encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);        
                    
                    PdfPCell pro1 = new PdfPCell(new Phrase("Codigo", negrita));
                    PdfPCell pro2 = new PdfPCell(new Phrase("Descripcion", negrita));
                    PdfPCell pro3 = new PdfPCell(new Phrase("Existencia", negrita));
                    
                    pro1.setBorder(0);
                    pro2.setBorder(0);
                    pro3.setBorder(0);
                    
                    productos.addCell(pro1);
                    productos.addCell(pro2);
                    productos.addCell(pro3);
                    

                    Connection conn2 = ConexionBase.getConnection();

                    
                    
                    String sql2 = "SELECT  ID_Producto, DescripcionProd ,Existencia FROM Producto  WHERE id_estatus=1";
        
                    Statement st2 = null;
                    ResultSet rs2 = null;
                    
                    try {
                        st2 = conn2.createStatement();
                        rs2 = st2.executeQuery(sql2);
                        while (rs2.next()) { 
                            for (int i = 0; i < 3; i++) {
                                productos.addCell(rs2.getString(i+1));
                            }
                        }
            
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "NO se pudo generar el Inventario" + e.getMessage());
            
                    }
                    
                    doc.add(productos);
                
                    //Terminan Productos
                    
            
                    doc.close();
            
                    archivoPdfN.close();
               
                }catch(Exception e){
        
                }
        
        try{
            File fileAbrir = new File("src/pdfss/inventario.pdf");
            
            if(fileAbrir.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(fileAbrir);
                }else{
                    JOptionPane.showMessageDialog(null, "Pelas Soporte");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Pelas Archivo");
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_btnInventarioActionPerformed

    private void btnMermaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMermaActionPerformed
        // TODO add your handling code here:
        CaducadoFrut caducadoF = new CaducadoFrut();
        caducadoF.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_btnMermaActionPerformed

    private void btnAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaActionPerformed
        // TODO add your handling code here:
        AltaProducto  productos= new AltaProducto();
        productos.setVisible(true);

        
        this.setVisible(false);
    }//GEN-LAST:event_btnAltaActionPerformed

    private void btnTipoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoProdActionPerformed
        // TODO add your handling code here:
        
        TipoProdFrut tipo = new TipoProdFrut();
        tipo.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_btnTipoProdActionPerformed

    private void btnUnidMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnidMedActionPerformed
        // TODO add your handling code here:
        
        UnidadesMedFrut unidadesFrut = new UnidadesMedFrut();
        unidadesFrut.setVisible(true);
        
        this.setVisible(false);
        
    }//GEN-LAST:event_btnUnidMedActionPerformed

    private void btnCorteCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorteCajaActionPerformed
        // TODO add your handling code here:
        
        String Empleado ="";
        
        try{
             Connection conn = ConexionBase.getConnection();
                    String sqlS = "SELECT NombreEmpleado from Usuarios u, UsuarioUso s where s.id_Usuario = u.id_Usuario";                 
        
                    Statement st = null;
                    ResultSet rs = null;
                    
                    st = conn.createStatement();
                    rs = st.executeQuery(sqlS);
                    if(rs.next())
                    Empleado = rs.getString(1);
        
        }catch (SQLException e) {           
            JOptionPane.showMessageDialog(null, "NO se pudo encontar al piloto" + e.getMessage());
                        
        }
        
        
        
        
        try{
            
                    FileOutputStream archivoPdfN;            
                    File file = new File("src/pdfss/corteDeCaja.pdf");           
                    archivoPdfN = new FileOutputStream(file);
            
            
                    Document doc = new Document();
                    PdfWriter.getInstance(doc,archivoPdfN);
            
            
                    doc.open();
                    
                    Font negrita = new Font(Font.FontFamily.TIMES_ROMAN,12,Font.BOLD,BaseColor.BLACK);
                    Image logo = Image.getInstance("src/Imagenes/logo.png");
            
                    
                    Paragraph fecha = new Paragraph();
                    
                    fecha.add(Chunk.NEWLINE);
            
                    java.util.Date date= new java.util.Date();
                    fecha.add("Empleado: " +Empleado+"\nFecha: "+ new SimpleDateFormat("dd-MM-yyyy").format(date)+"\n\n");
            
                    //Encabezado
                    PdfPTable encabezado = new PdfPTable(4);            
                    encabezado.setWidthPercentage(100);
                    encabezado.getDefaultCell().setBorder(0);
            
                    float[] columnaEncabezado = new float[]{20f,30f,70f,40f};
            
                    encabezado.setWidths(columnaEncabezado);
                    encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);                 
            
                    encabezado.addCell(logo);
            
                    String nom = "FRUTERIA POLO";
                    String tel = "844-298-2625";
                    String dir = "SALTILLO-COAHUILA";
            
                    encabezado.addCell("");
                    encabezado.addCell(nom + "\nVentas del dia\nTelefono: "+tel + "\nDireccion: "+dir);
                    encabezado.addCell(fecha);
            
                    doc.add(encabezado);
                    
                    //Termina encabezado
                    
                    //Empiezan Productos
                    
                    PdfPTable productos = new PdfPTable(3);            
                    encabezado.setWidthPercentage(100);
                    encabezado.getDefaultCell().setBorder(0);
                    
                    float[] columnaProductos = new float[]{20f,30f,70f,};
            
                    encabezado.setWidths(columnaEncabezado);
                    encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);        
                    
                    PdfPCell pro1 = new PdfPCell(new Phrase("NUMERO DE VENTA", negrita));
                    PdfPCell pro2 = new PdfPCell(new Phrase("IMPORTE", negrita));
                    PdfPCell pro3 = new PdfPCell(new Phrase("FECHA Y HORA", negrita));
                    
                    pro1.setBorder(0);
                    pro2.setBorder(0);
                    pro3.setBorder(0);
                    
                    productos.addCell(pro1);
                    productos.addCell(pro2);
                    productos.addCell(pro3);
                    

                    Connection conn2 = ConexionBase.getConnection();

                    java.util.Date date2= new java.util.Date();
                    new SimpleDateFormat("ddMMyyyy").format(date2);
                    
                    String sql2 = "SELECT id_venta , precioVenta, FechaVenta FROM Ventas WHERE TRUNC (FechaVenta ) = TO_DATE ('"+new SimpleDateFormat("ddMMyy").format(date2)+"', 'DDMMYY')";
        
                    Statement st2 = null;
                    ResultSet rs2 = null;
                    
                    try {
                        st2 = conn2.createStatement();
                        rs2 = st2.executeQuery(sql2);
                        while (rs2.next()) { 
                            for (int i = 0; i < 3; i++) {
                                productos.addCell(rs2.getString(i+1));
                            }
                        }
            
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "NO se pudo generar el Inventario" + e.getMessage());
            
                    }
                    
                    doc.add(productos);
                
                    //Terminan Productos
                    
                    //empieza el total
                    float total =0;
                    
                    
                    PdfPTable totales = new PdfPTable(1);            
                    totales.setWidthPercentage(10);
                    totales.getDefaultCell().setBorder(0);
                    
                    float[] columnaTotales = new float[]{30f};
            
                    totales.setWidths(columnaTotales);
                    totales.setHorizontalAlignment(Element.ALIGN_CENTER);                 
                       
                    
                    PdfPCell tot1 = new PdfPCell(new Phrase("Total", negrita));
                    
                    tot1.setBorder(0);

                    Connection conn3 = ConexionBase.getConnection();
                    String sql3 = "SELECT precioVenta FROM Ventas WHERE TRUNC (FechaVenta ) = TO_DATE ('"+new SimpleDateFormat("ddMMyy").format(date2)+"', 'DDMMYY')";
        
                    Statement st3 = null;
                    ResultSet rs3 = null;
                    
                    try {
                        st3 = conn3.createStatement();
                        rs3 = st3.executeQuery(sql3);
                        while (rs3.next()) {                             
                                total += rs3.getFloat(1);                           
                        }
            
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "NO se pudo generar el corte de caja" + e.getMessage());
            
                    }
                    
                    totales.addCell(tot1);

                    totales.addCell(String.valueOf(total));
            
                    doc.add(totales);
            
                    doc.close();
            
                    archivoPdfN.close();
               
                }catch(Exception e){
        
                }
        
        try{
            File fileAbrir = new File("src/pdfss/corteDeCaja.pdf");
            
            if(fileAbrir.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(fileAbrir);
                }else{
                    JOptionPane.showMessageDialog(null, "Pelas Soporte");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Pelas Archivo");
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_btnCorteCajaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuFrutAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuFrutAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuFrutAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuFrutAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuFrutAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton btnAlta;
    private javax.swing.JButton btnCorteCaja;
    private javax.swing.JButton btnInventario;
    private javax.swing.JButton btnMerma;
    private javax.swing.JButton btnReabastecer;
    private javax.swing.JButton btnRecetas;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnTipoProd;
    private javax.swing.JButton btnUnidMed;
    private javax.swing.JButton btnUsuarios;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
